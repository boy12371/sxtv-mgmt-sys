// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.sx.tv.entites;

import com.sx.tv.entites.Role;
import com.sx.tv.entites.User;
import java.util.List;
import javax.persistence.EntityManager;
import javax.persistence.TypedQuery;

privileged aspect User_Roo_Finder {
    
    public static TypedQuery<User> User.findUsersByNameEquals(String name) {
        if (name == null || name.length() == 0) throw new IllegalArgumentException("The name argument is required");
        EntityManager em = User.entityManager();
        TypedQuery<User> q = em.createQuery("SELECT o FROM User AS o WHERE o.name = :name", User.class);
        q.setParameter("name", name);
        return q;
    }
    
    public static TypedQuery<User> User.findUsersByRoles(List<Role> roles) {
        if (roles == null) throw new IllegalArgumentException("The roles argument is required");
        EntityManager em = User.entityManager();
        StringBuilder queryBuilder = new StringBuilder("SELECT o FROM User AS o WHERE");
        for (int i = 0; i < roles.size(); i++) {
            if (i > 0) queryBuilder.append(" AND");
            queryBuilder.append(" :roles_item").append(i).append(" MEMBER OF o.roles");
        }
        TypedQuery<User> q = em.createQuery(queryBuilder.toString(), User.class);
        int rolesIndex = 0;
        for (Role _role: roles) {
            q.setParameter("roles_item" + rolesIndex++, _role);
        }
        return q;
    }
    
}
