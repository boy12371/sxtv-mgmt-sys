// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.sx.tv.entites;

import com.sx.tv.entites.Score;
import com.sx.tv.entites.TVShow;
import com.sx.tv.entites.User;
import javax.persistence.EntityManager;
import javax.persistence.TypedQuery;

privileged aspect Score_Roo_Finder {
    
    public static TypedQuery<Score> Score.findScoresByRatedBy(User ratedBy) {
        if (ratedBy == null) throw new IllegalArgumentException("The ratedBy argument is required");
        EntityManager em = Score.entityManager();
        TypedQuery<Score> q = em.createQuery("SELECT o FROM Score AS o WHERE o.ratedBy = :ratedBy", Score.class);
        q.setParameter("ratedBy", ratedBy);
        return q;
    }
    
    public static TypedQuery<Score> Score.findScoresByRatedByAndTvshow(User ratedBy, TVShow tvshow) {
        if (ratedBy == null) throw new IllegalArgumentException("The ratedBy argument is required");
        if (tvshow == null) throw new IllegalArgumentException("The tvshow argument is required");
        EntityManager em = Score.entityManager();
        TypedQuery<Score> q = em.createQuery("SELECT o FROM Score AS o WHERE o.ratedBy = :ratedBy AND o.tvshow = :tvshow", Score.class);
        q.setParameter("ratedBy", ratedBy);
        q.setParameter("tvshow", tvshow);
        return q;
    }
    
    public static TypedQuery<Score> Score.findScoresByTvshow(TVShow tvshow) {
        if (tvshow == null) throw new IllegalArgumentException("The tvshow argument is required");
        EntityManager em = Score.entityManager();
        TypedQuery<Score> q = em.createQuery("SELECT o FROM Score AS o WHERE o.tvshow = :tvshow", Score.class);
        q.setParameter("tvshow", tvshow);
        return q;
    }
    
}
